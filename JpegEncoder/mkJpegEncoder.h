/*
 * Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
 * 
 * On Fri Dec 23 17:42:32 CST 2022
 * 
 */

/* Generation options: */
#ifndef __mkJpegEncoder_h__
#define __mkJpegEncoder_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkJpegEncoder module */
class MOD_mkJpegEncoder : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_c_code_0;
  MOD_Reg<tUInt8> INST_c_code_1;
  MOD_Reg<tUInt8> INST_c_code_2;
  MOD_Reg<tUInt8> INST_c_code_3;
  MOD_Reg<tUInt8> INST_c_code_4;
  MOD_Reg<tUInt8> INST_c_code_5;
  MOD_Reg<tUInt8> INST_c_code_6;
  MOD_Reg<tUInt8> INST_c_code_7;
  MOD_Reg<tUInt8> INST_c_len_0;
  MOD_Reg<tUInt8> INST_c_len_1;
  MOD_Reg<tUInt8> INST_c_len_2;
  MOD_Reg<tUInt8> INST_c_len_3;
  MOD_Reg<tUInt8> INST_c_len_4;
  MOD_Reg<tUInt8> INST_c_len_5;
  MOD_Reg<tUInt8> INST_c_len_6;
  MOD_Reg<tUInt8> INST_c_len_7;
  MOD_Reg<tUInt8> INST_c_prev_zcnt;
  MOD_Reg<tUInt8> INST_c_valid_0_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_0_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_1_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_1_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_2_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_2_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_3_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_3_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_4_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_4_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_5_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_5_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_6_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_6_self_reg_1;
  MOD_Reg<tUInt8> INST_c_valid_7_self_reg;
  MOD_Wire<tUInt8> INST_c_valid_7_self_reg_1;
  MOD_Reg<tUInt8> INST_c_zcnt_0;
  MOD_Reg<tUInt8> INST_c_zcnt_1;
  MOD_Reg<tUInt8> INST_c_zcnt_2;
  MOD_Reg<tUInt8> INST_c_zcnt_3;
  MOD_Reg<tUInt8> INST_c_zcnt_4;
  MOD_Reg<tUInt8> INST_c_zcnt_5;
  MOD_Reg<tUInt8> INST_c_zcnt_6;
  MOD_Reg<tUInt8> INST_c_zcnt_7;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_0;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_1;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_2;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_3;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_4;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_5;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_6;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_0_7;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_0;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_1;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_2;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_3;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_4;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_5;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_6;
  MOD_Reg<tUWide> INST_dcta_double_buffer_buffer_1_7;
  MOD_Wire<tUInt8> INST_dcta_double_buffer_empty;
  MOD_Wire<tUInt8> INST_dcta_double_buffer_full;
  MOD_Reg<tUInt8> INST_dcta_double_buffer_rblock;
  MOD_Reg<tUInt32> INST_dcta_double_buffer_rcnt;
  MOD_Wire<tUInt8> INST_dcta_double_buffer_rewind_call;
  MOD_Reg<tUInt8> INST_dcta_double_buffer_wblock;
  MOD_Reg<tUInt8> INST_dcta_double_buffer_wptr;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_0;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_1;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_2;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_3;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_4;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_5;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_6;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_0_7;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_0;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_1;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_2;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_3;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_4;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_5;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_6;
  MOD_Reg<tUWide> INST_dctb_double_buffer_buffer_1_7;
  MOD_Wire<tUInt8> INST_dctb_double_buffer_empty;
  MOD_Wire<tUInt8> INST_dctb_double_buffer_full;
  MOD_Reg<tUInt8> INST_dctb_double_buffer_rblock;
  MOD_Reg<tUInt32> INST_dctb_double_buffer_rcnt;
  MOD_Wire<tUInt8> INST_dctb_double_buffer_rewind_call;
  MOD_Reg<tUInt8> INST_dctb_double_buffer_wblock;
  MOD_Reg<tUInt8> INST_dctb_double_buffer_wptr;
  MOD_Wire<tUInt8> INST_fsm_abort;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_abort;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_1_start_reg;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_start_reg_1;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_start_wire;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_1_state_can_overlap;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_1_state_fired;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_fsm_par_blocks_1_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_state_overlap_pw;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_1_state_set_pw;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_abort;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_start_reg;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_start_reg_1;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_start_wire;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_state_can_overlap;
  MOD_Reg<tUInt8> INST_fsm_par_blocks_state_fired;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_fsm_par_blocks_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_state_overlap_pw;
  MOD_Wire<tUInt8> INST_fsm_par_blocks_state_set_pw;
  MOD_Wire<tUInt8> INST_fsm_par_running;
  MOD_Reg<tUInt8> INST_fsm_start_reg;
  MOD_Reg<tUInt8> INST_fsm_start_reg_1;
  MOD_Wire<tUInt8> INST_fsm_start_reg_2;
  MOD_Wire<tUInt8> INST_fsm_start_wire;
  MOD_Reg<tUInt8> INST_fsm_state_can_overlap;
  MOD_Reg<tUInt8> INST_fsm_state_fired;
  MOD_Wire<tUInt8> INST_fsm_state_fired_1;
  MOD_ConfigReg<tUInt8> INST_fsm_state_mkFSMstate;
  MOD_Wire<tUInt8> INST_fsm_state_overlap_pw;
  MOD_Wire<tUInt8> INST_fsm_state_set_pw;
  MOD_Reg<tUInt8> INST_header_idx;
  MOD_Reg<tUInt32> INST_inout_cnt;
  MOD_Reg<tUInt32> INST_input_idx;
  MOD_Reg<tUWide> INST_j_data_self_reg;
  MOD_Wire<tUWide> INST_j_data_self_reg_1;
  MOD_Wire<tUInt8> INST_linebuf_empty;
  MOD_Wire<tUInt8> INST_linebuf_full;
  MOD_Reg<tUInt8> INST_linebuf_maxi;
  MOD_Reg<tUInt32> INST_linebuf_maxj;
  MOD_BRAM<tUInt32,tUInt64,tUInt8> INST_linebuf_ram_memory;
  MOD_Reg<tUInt8> INST_linebuf_ram_serverAdapterA_cnt;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_cnt_1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_cnt_2;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_cnt_3;
  MOD_Fifo<tUInt64> INST_linebuf_ram_serverAdapterA_outDataCore;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_outData_deqCalled;
  MOD_Wire<tUInt64> INST_linebuf_ram_serverAdapterA_outData_enqData;
  MOD_Wire<tUInt64> INST_linebuf_ram_serverAdapterA_outData_outData;
  MOD_Reg<tUInt8> INST_linebuf_ram_serverAdapterA_s1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_s1_1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterA_writeWithResp;
  MOD_Reg<tUInt8> INST_linebuf_ram_serverAdapterB_cnt;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_cnt_1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_cnt_2;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_cnt_3;
  MOD_Fifo<tUInt64> INST_linebuf_ram_serverAdapterB_outDataCore;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_outData_deqCalled;
  MOD_Wire<tUInt64> INST_linebuf_ram_serverAdapterB_outData_enqData;
  MOD_Wire<tUInt64> INST_linebuf_ram_serverAdapterB_outData_outData;
  MOD_Reg<tUInt8> INST_linebuf_ram_serverAdapterB_s1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_s1_1;
  MOD_Wire<tUInt8> INST_linebuf_ram_serverAdapterB_writeWithResp;
  MOD_Reg<tUInt8> INST_linebuf_rblock;
  MOD_Reg<tUInt8> INST_linebuf_reversei;
  MOD_Reg<tUInt8> INST_linebuf_reversej;
  MOD_Wire<tUInt8> INST_linebuf_rewind_call;
  MOD_Reg<tUInt8> INST_linebuf_ri;
  MOD_Reg<tUInt32> INST_linebuf_rj;
  MOD_Reg<tUInt8> INST_linebuf_transposeij;
  MOD_Reg<tUInt8> INST_linebuf_wblock;
  MOD_Reg<tUInt8> INST_linebuf_wi;
  MOD_Reg<tUInt32> INST_linebuf_wj;
  MOD_Reg<tUWide> INST_lm_bits_self_reg;
  MOD_Wire<tUWide> INST_lm_bits_self_reg_1;
  MOD_Reg<tUInt8> INST_lm_len;
  MOD_Reg<tUInt32> INST_norm_pixels_0_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_0_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_1_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_1_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_2_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_2_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_3_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_3_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_4_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_4_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_5_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_5_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_6_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_6_self_reg_1;
  MOD_Reg<tUInt32> INST_norm_pixels_7_self_reg;
  MOD_Wire<tUInt32> INST_norm_pixels_7_self_reg_1;
  MOD_Reg<tUInt32> INST_output_idx;
  MOD_Reg<tUInt32> INST_pm_bits_0;
  MOD_Wire<tUInt32> INST_pm_bits_0_1;
  MOD_Reg<tUInt32> INST_pm_bits_1;
  MOD_Wire<tUInt32> INST_pm_bits_1_1;
  MOD_Reg<tUInt32> INST_pm_bits_2;
  MOD_Wire<tUInt32> INST_pm_bits_2_1;
  MOD_Reg<tUInt32> INST_pm_bits_3;
  MOD_Wire<tUInt32> INST_pm_bits_3_1;
  MOD_Reg<tUInt32> INST_pm_bits_4;
  MOD_Wire<tUInt32> INST_pm_bits_4_1;
  MOD_Reg<tUInt32> INST_pm_bits_5;
  MOD_Wire<tUInt32> INST_pm_bits_5_1;
  MOD_Reg<tUInt32> INST_pm_bits_6;
  MOD_Wire<tUInt32> INST_pm_bits_6_1;
  MOD_Reg<tUInt32> INST_pm_bits_7;
  MOD_Wire<tUInt32> INST_pm_bits_7_1;
  MOD_Reg<tUInt8> INST_pm_en;
  MOD_Wire<tUInt8> INST_pm_en_1;
  MOD_Reg<tUInt8> INST_pm_len_0;
  MOD_Wire<tUInt8> INST_pm_len_0_1;
  MOD_Reg<tUInt8> INST_pm_len_1;
  MOD_Wire<tUInt8> INST_pm_len_1_1;
  MOD_Reg<tUInt8> INST_pm_len_2;
  MOD_Wire<tUInt8> INST_pm_len_2_1;
  MOD_Reg<tUInt8> INST_pm_len_3;
  MOD_Wire<tUInt8> INST_pm_len_3_1;
  MOD_Reg<tUInt8> INST_pm_len_4;
  MOD_Wire<tUInt8> INST_pm_len_4_1;
  MOD_Reg<tUInt8> INST_pm_len_5;
  MOD_Wire<tUInt8> INST_pm_len_5_1;
  MOD_Reg<tUInt8> INST_pm_len_6;
  MOD_Wire<tUInt8> INST_pm_len_6_1;
  MOD_Reg<tUInt8> INST_pm_len_7;
  MOD_Wire<tUInt8> INST_pm_len_7_1;
  MOD_Wire<tUInt64> INST_put_pixel;
  MOD_Reg<tUInt64> INST_qnt_pixels;
  MOD_Reg<tUInt8> INST_qnt_prev_dc;
  MOD_Reg<tUInt8> INST_qnt_sy_self_reg;
  MOD_Wire<tUInt8> INST_qnt_sy_self_reg_1;
  MOD_Reg<tUWide> INST_st_rem_bits;
  MOD_Reg<tUInt8> INST_st_rem_len;
  MOD_Reg<tUInt32> INST_x_y_bytes;
  MOD_Reg<tUInt32> INST_zig_pixels_0;
  MOD_Reg<tUInt32> INST_zig_pixels_1;
  MOD_Reg<tUInt32> INST_zig_pixels_2;
  MOD_Reg<tUInt32> INST_zig_pixels_3;
  MOD_Reg<tUInt32> INST_zig_pixels_4;
  MOD_Reg<tUInt32> INST_zig_pixels_5;
  MOD_Reg<tUInt32> INST_zig_pixels_6;
  MOD_Reg<tUInt32> INST_zig_pixels_7;
  MOD_Reg<tUInt8> INST_zig_sy_self_reg;
  MOD_Wire<tUInt8> INST_zig_sy_self_reg_1;
 
 /* Constructor */
 public:
  MOD_mkJpegEncoder(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_init;
  tUWide PORT_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_j_data_self_reg_371_BIT_128___d2372;
  tUInt8 DEF_WILL_FIRE_init;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l267c15;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l266c14;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l265c14;
  tUInt8 DEF_WILL_FIRE_RL_fsm_actionpar_start_l239c7;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l246c21;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l242c34;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l241c23;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l262c21;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l250c35;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l249c24;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_f_update_l237c7;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l238c17;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_f_init_l237c7;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l236c19;
  tUInt8 DEF_WILL_FIRE_RL_fsm_action_l235c19;
  tUInt8 DEF_input_idx_284_EQ_0___d2285;
  tUInt8 DEF_fsm_abort_whas__108_AND_fsm_abort_wget__109_11_ETC___d2369;
  tUInt8 DEF_linebuf_empty_whas____d112;
  tUInt8 DEF_qnt_sy_self_reg_585_BIT_3___d1586;
  tUInt8 DEF_zig_sy_self_reg_489_BIT_3___d1490;
  tUWide DEF_j_data_self_reg___d2371;
  tUWide DEF_lm_bits_self_reg___d2230;
  tUInt32 DEF_b__h128307;
  tUInt32 DEF_b__h116874;
  tUInt32 DEF_norm_pixels_7_self_reg___d331;
  tUInt32 DEF_norm_pixels_6_self_reg___d329;
  tUInt32 DEF_norm_pixels_5_self_reg___d327;
  tUInt32 DEF_norm_pixels_4_self_reg___d325;
  tUInt32 DEF_norm_pixels_3_self_reg___d323;
  tUInt32 DEF_norm_pixels_2_self_reg___d321;
  tUInt32 DEF_norm_pixels_1_self_reg___d319;
  tUInt32 DEF_norm_pixels_0_self_reg___d317;
  tUInt8 DEF_x__h156777;
  tUInt8 DEF_fsm_state_mkFSMstate_read____d2193;
  tUInt8 DEF_qnt_sy_self_reg___d1585;
  tUInt8 DEF_zig_sy_self_reg___d1489;
  tUInt8 DEF_b__h10036;
  tUInt8 DEF_b__h4347;
  tUInt8 DEF_c_valid_7_self_reg___d1962;
  tUInt8 DEF_c_valid_6_self_reg___d1960;
  tUInt8 DEF_c_valid_5_self_reg___d1958;
  tUInt8 DEF_c_valid_4_self_reg___d1956;
  tUInt8 DEF_c_valid_3_self_reg___d1954;
  tUInt8 DEF_c_valid_2_self_reg___d1952;
  tUInt8 DEF_c_valid_1_self_reg___d1950;
  tUInt8 DEF_c_valid_0_self_reg___d1948;
  tUInt8 DEF_linebuf_ram_serverAdapterB_s1___d97;
  tUInt8 DEF_linebuf_ram_serverAdapterA_s1___d46;
  tUInt8 DEF_fsm_state_fired__h155401;
  tUInt8 DEF_fsm_abort_whas____d2108;
  tUInt8 DEF_fsm_abort_wget____d2109;
  tUInt8 DEF_fsm_start_reg_1__h155399;
  tUInt8 DEF_fsm_start_reg__h162925;
  tUInt8 DEF_linebuf_empty_wget____d115;
  tUInt8 DEF_linebuf_ram_serverAdapterB_cnt_3_whas____d75;
  tUInt8 DEF_linebuf_ram_serverAdapterB_cnt_2_whas____d73;
  tUInt8 DEF_linebuf_ram_serverAdapterB_cnt_1_whas____d72;
  tUInt8 DEF_linebuf_ram_serverAdapterA_cnt_3_whas____d23;
  tUInt8 DEF_linebuf_ram_serverAdapterA_cnt_2_whas____d21;
  tUInt8 DEF_linebuf_ram_serverAdapterA_cnt_1_whas____d20;
  tUInt8 DEF_lm_bits_self_reg_230_BIT_120___d2231;
  tUInt8 DEF_norm_pixels_7_self_reg_31_BIT_8___d332;
  tUInt8 DEF_norm_pixels_6_self_reg_29_BIT_8___d330;
  tUInt8 DEF_norm_pixels_5_self_reg_27_BIT_8___d328;
  tUInt8 DEF_norm_pixels_4_self_reg_25_BIT_8___d326;
  tUInt8 DEF_norm_pixels_3_self_reg_23_BIT_8___d324;
  tUInt8 DEF_norm_pixels_2_self_reg_21_BIT_8___d322;
  tUInt8 DEF_norm_pixels_0_self_reg_17_BIT_8___d318;
  tUInt8 DEF_norm_pixels_1_self_reg_19_BIT_8___d320;
  tUInt8 DEF_fsm_state_mkFSMstate_read__193_EQ_11___d2196;
  tUInt8 DEF_fsm_abort_whas__108_AND_fsm_abort_wget__109_11_ETC___d2197;
  tUInt8 DEF_fsm_abort_whas__108_AND_fsm_abort_wget__109___d2110;
  tUInt8 DEF_fsm_abort_whas__108_AND_fsm_abort_wget__109_11_ETC___d2353;
 
 /* Local definitions */
 private:
  tUInt8 DEF_x__h79785;
  tUInt8 DEF_x__h54030;
  tUWide DEF_dcta_double_buffer_buffer_1_7__h60575;
  tUWide DEF_dcta_double_buffer_buffer_1_6__h59750;
  tUWide DEF_dcta_double_buffer_buffer_1_5__h58925;
  tUWide DEF_dcta_double_buffer_buffer_1_4__h58100;
  tUWide DEF_dcta_double_buffer_buffer_1_3__h57275;
  tUWide DEF_dcta_double_buffer_buffer_1_2__h56450;
  tUWide DEF_dcta_double_buffer_buffer_1_1__h55625;
  tUWide DEF_dcta_double_buffer_buffer_1_0__h54800;
  tUWide DEF_dcta_double_buffer_buffer_0_7__h60399;
  tUWide DEF_dcta_double_buffer_buffer_0_6__h59574;
  tUWide DEF_dcta_double_buffer_buffer_0_5__h58749;
  tUWide DEF_dcta_double_buffer_buffer_0_4__h57924;
  tUWide DEF_dcta_double_buffer_buffer_0_3__h57099;
  tUWide DEF_dcta_double_buffer_buffer_0_2__h56274;
  tUWide DEF_dcta_double_buffer_buffer_0_1__h55449;
  tUWide DEF_dcta_double_buffer_buffer_0_0__h54624;
  tUWide DEF_j_data_self_reg_1_wget____d279;
  tUWide DEF_st_rem_bits__h161569;
  tUWide DEF_lm_bits_self_reg_1_wget____d275;
  tUWide DEF_dctb_double_buffer_buffer_1_7__h85830;
  tUWide DEF_dctb_double_buffer_buffer_1_6__h85476;
  tUWide DEF_dctb_double_buffer_buffer_1_5__h85122;
  tUWide DEF_dctb_double_buffer_buffer_1_4__h84768;
  tUWide DEF_dctb_double_buffer_buffer_1_3__h84414;
  tUWide DEF_dctb_double_buffer_buffer_1_2__h84060;
  tUWide DEF_dctb_double_buffer_buffer_1_1__h83706;
  tUWide DEF_dctb_double_buffer_buffer_1_0__h83352;
  tUWide DEF_dctb_double_buffer_buffer_0_7__h85654;
  tUWide DEF_dctb_double_buffer_buffer_0_6__h85300;
  tUWide DEF_dctb_double_buffer_buffer_0_5__h84946;
  tUWide DEF_dctb_double_buffer_buffer_0_4__h84592;
  tUWide DEF_dctb_double_buffer_buffer_0_3__h84238;
  tUWide DEF_dctb_double_buffer_buffer_0_2__h83884;
  tUWide DEF_dctb_double_buffer_buffer_0_1__h83530;
  tUWide DEF_dctb_double_buffer_buffer_0_0__h83176;
  tUInt64 DEF_linebuf_ram_serverAdapterB_outData_enqData_wget____d60;
  tUInt64 DEF_linebuf_ram_serverAdapterA_outData_enqData_wget____d8;
  tUInt32 DEF_b__h157735;
  tUInt32 DEF_b__h12379;
  tUInt8 DEF_b__h12369;
  tUInt8 DEF_dctb_double_buffer_rblock__h79811;
  tUInt8 DEF_dctb_double_buffer_wblock__h51713;
  tUInt8 DEF_dcta_double_buffer_rblock__h54056;
  tUInt8 DEF_dcta_double_buffer_wblock__h30649;
  tUInt8 DEF_linebuf_rblock__h12354;
  tUInt8 DEF_linebuf_wblock__h159217;
  tUWide DEF_x__h158245;
  tUWide DEF_IF_st_rem_len_243_PLUS_lm_len_244_245_ULT_128__ETC___d2261;
  tUWide DEF_st_rem_bits_248_CONCAT_0b0_249_OR_IF_lm_bits_s_ETC___d2255;
  tUWide DEF_bits__h158021;
  tUWide DEF_x__h164465;
  tUWide DEF_st_rem_bits_248_CONCAT_0b0_249_OR_IF_lm_bits_s_ETC___d2259;
  tUWide DEF_x__h158147;
  tUInt8 DEF_linebuf_rblock_BIT_0___h12259;
  tUWide DEF_SEL_ARR_0xFFD8000000FFE000104A464946000101_0x1_ETC___d2213;
  tUWide DEF_y_avValue_snd__h158202;
  tUWide DEF_IF_j_data_self_reg_1_whas__78_THEN_j_data_self_ETC___d281;
  tUWide DEF__0_CONCAT_DONTCARE___d280;
  tUWide DEF_IF_lm_bits_self_reg_1_whas__74_THEN_lm_bits_se_ETC___d277;
  tUWide DEF__0_CONCAT_DONTCARE___d276;
  tUWide DEF_x__read__h28891;
  tUInt32 DEF__0_CONCAT_DONTCARE___d145;
  tUInt8 DEF__0_CONCAT_DONTCARE___d186;
  tUInt8 DEF__0_CONCAT_DONTCARE___d36;
  tUWide DEF_y__h158095;
  tUWide DEF_x__h158098;
  tUWide DEF_y__h107163;
  tUWide DEF_x__h107609;
  tUWide DEF_y__h107176;
  tUWide DEF_x__h107557;
  tUWide DEF_y__h107189;
  tUWide DEF_x__h107505;
  tUWide DEF_y__h107202;
  tUWide DEF_x__h107453;
  tUWide DEF_y__h107215;
  tUWide DEF_x__h107401;
  tUWide DEF_y__h107241;
  tUWide DEF_x__h107297;
  tUWide DEF_y__h107228;
  tUWide DEF_x__h107349;
  tUWide DEF_x__h158094;
  tUWide DEF__0_CONCAT_pm_bits_0_067_CONCAT_0_068_OR_0b0_CON_ETC___d2103;
  tUWide DEF_x__h107162;
  tUWide DEF_x__h107175;
  tUWide DEF_x__h107188;
  tUWide DEF_x__h107201;
  tUWide DEF_x__h107214;
  tUWide DEF_x__h107227;
  tUWide DEF_x__h107240;
  tUWide DEF_SEXT_IF_norm_pixels_0_self_reg_17_BIT_8_18_THE_ETC___d549;
  tUWide DEF_SEXT_IF_norm_pixels_0_self_reg_17_BIT_8_18_THE_ETC___d510;
  tUWide DEF_SEXT_IF_norm_pixels_0_self_reg_17_BIT_8_18_THE_ETC___d463;
  tUWide DEF__1_CONCAT_SEL_ARR_0xFFD8000000FFE000104A4649460_ETC___d2214;
  tUWide DEF__1_CONCAT_st_rem_bits_248_CONCAT_0b0_249_OR_IF__ETC___d2256;
  tUWide DEF__1_CONCAT_st_rem_bits_248___d2328;
  tUWide DEF__0x8_CONCAT_x_y_bytes_210_CONCAT_0x1011100FFC40_ETC___d2211;
  tUWide DEF__1_CONCAT_0_CONCAT_pm_bits_0_067_CONCAT_0_068_O_ETC___d2104;
  tUWide DEF_SEL_ARR_SEL_ARR_dcta_double_buffer_buffer_0_0__ETC___d986;
 
 /* Rules */
 public:
  void RL_linebuf_ram_serverAdapterA_outData_setFirstCore();
  void RL_linebuf_ram_serverAdapterA_outData_setFirstEnq();
  void RL_linebuf_ram_serverAdapterA_outData_enqOnly();
  void RL_linebuf_ram_serverAdapterA_outData_deqOnly();
  void RL_linebuf_ram_serverAdapterA_outData_enqAndDeq();
  void RL_linebuf_ram_serverAdapterA_cnt_finalAdd();
  void RL_linebuf_ram_serverAdapterA_s1__dreg_update();
  void RL_linebuf_ram_serverAdapterA_stageReadResponseAlways();
  void RL_linebuf_ram_serverAdapterA_moveToOutFIFO();
  void RL_linebuf_ram_serverAdapterA_overRun();
  void RL_linebuf_ram_serverAdapterB_outData_setFirstCore();
  void RL_linebuf_ram_serverAdapterB_outData_setFirstEnq();
  void RL_linebuf_ram_serverAdapterB_outData_enqOnly();
  void RL_linebuf_ram_serverAdapterB_outData_deqOnly();
  void RL_linebuf_ram_serverAdapterB_outData_enqAndDeq();
  void RL_linebuf_ram_serverAdapterB_cnt_finalAdd();
  void RL_linebuf_ram_serverAdapterB_s1__dreg_update();
  void RL_linebuf_ram_serverAdapterB_stageReadResponseAlways();
  void RL_linebuf_ram_serverAdapterB_moveToOutFIFO();
  void RL_linebuf_ram_serverAdapterB_overRun();
  void RL_linebuf_empty_full();
  void RL_linebuf_read_ram();
  void RL_norm_pixels_0_self_reg__dreg_update();
  void RL_norm_pixels_1_self_reg__dreg_update();
  void RL_norm_pixels_2_self_reg__dreg_update();
  void RL_norm_pixels_3_self_reg__dreg_update();
  void RL_norm_pixels_4_self_reg__dreg_update();
  void RL_norm_pixels_5_self_reg__dreg_update();
  void RL_norm_pixels_6_self_reg__dreg_update();
  void RL_norm_pixels_7_self_reg__dreg_update();
  void RL_dcta_double_buffer_empty_full();
  void RL_dctb_double_buffer_empty_full();
  void RL_zig_sy_self_reg__dreg_update();
  void RL_qnt_sy_self_reg__dreg_update();
  void RL_c_valid_0_self_reg__dreg_update();
  void RL_c_valid_1_self_reg__dreg_update();
  void RL_c_valid_2_self_reg__dreg_update();
  void RL_c_valid_3_self_reg__dreg_update();
  void RL_c_valid_4_self_reg__dreg_update();
  void RL_c_valid_5_self_reg__dreg_update();
  void RL_c_valid_6_self_reg__dreg_update();
  void RL_c_valid_7_self_reg__dreg_update();
  void RL_pm_len_0__dreg_update();
  void RL_pm_len_1__dreg_update();
  void RL_pm_len_2__dreg_update();
  void RL_pm_len_3__dreg_update();
  void RL_pm_len_4__dreg_update();
  void RL_pm_len_5__dreg_update();
  void RL_pm_len_6__dreg_update();
  void RL_pm_len_7__dreg_update();
  void RL_pm_bits_0__dreg_update();
  void RL_pm_bits_1__dreg_update();
  void RL_pm_bits_2__dreg_update();
  void RL_pm_bits_3__dreg_update();
  void RL_pm_bits_4__dreg_update();
  void RL_pm_bits_5__dreg_update();
  void RL_pm_bits_6__dreg_update();
  void RL_pm_bits_7__dreg_update();
  void RL_pm_en__dreg_update();
  void RL_lm_bits_self_reg__dreg_update();
  void RL_j_data_self_reg__dreg_update();
  void RL_normalize();
  void RL_dct_a_transform();
  void RL_dct_b_transform();
  void RL_zig_zag_ordering();
  void RL_quantization();
  void RL_coding();
  void RL_pixel_wise_bit_merge();
  void RL_line_wise_bit_merge();
  void RL_fsm_start_reg__dreg_update();
  void RL_fsm_state_handle_abort();
  void RL_fsm_state_fired__dreg_update();
  void RL_fsm_state_every();
  void RL_fsm_par_blocks_start_reg__dreg_update();
  void RL_fsm_par_blocks_state_handle_abort();
  void RL_fsm_par_blocks_state_fired__dreg_update();
  void RL_fsm_par_blocks_state_every();
  void RL_fsm_par_blocks_restart();
  void RL_fsm_par_blocks_1_start_reg__dreg_update();
  void RL_fsm_par_blocks_1_state_handle_abort();
  void RL_fsm_par_blocks_1_state_fired__dreg_update();
  void RL_fsm_par_blocks_1_state_every();
  void RL_fsm_par_blocks_1_restart();
  void RL_fsm_restart();
  void RL_fsm_action_l235c19();
  void RL_fsm_action_l236c19();
  void RL_fsm_action_f_init_l237c7();
  void RL_fsm_action_l238c17();
  void RL_fsm_action_f_update_l237c7();
  void RL_fsm_action_l249c24();
  void RL_fsm_action_l250c35();
  void RL_fsm_action_l262c21();
  void RL_fsm_action_l241c23();
  void RL_fsm_action_l242c34();
  void RL_fsm_action_l246c21();
  void RL_fsm_actionpar_start_l239c7();
  void RL_fsm_action_l265c14();
  void RL_fsm_action_l266c14();
  void RL_fsm_action_l267c15();
  void RL_fsm_actionpar_run_l239c7();
  void RL_fsm_idle_l234c22();
  void RL_fsm_idle_l248c10();
  void RL_fsm_idle_l240c10();
  void RL_fsm_fsm_start();
  void __me_check_84();
  void __me_check_85();
  void __me_check_86();
  void __me_check_87();
  void __me_check_88();
  void __me_check_89();
  void __me_check_90();
  void __me_check_92();
  void __me_check_93();
  void __me_check_96();
  void __me_check_97();
 
 /* Methods */
 public:
  void METH_init(tUInt32 ARG_init_xtile, tUInt32 ARG_init_ytile);
  tUInt8 METH_RDY_init();
  void METH_waitTillDone();
  tUInt8 METH_RDY_waitTillDone();
  void METH_put(tUInt64 ARG_put_pixels);
  tUInt8 METH_RDY_put();
  tUWide METH_get();
  tUInt8 METH_RDY_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkJpegEncoder &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkJpegEncoder &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkJpegEncoder &backing);
};

#endif /* ifndef __mkJpegEncoder_h__ */
