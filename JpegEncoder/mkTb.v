//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
// On Tue Dec 20 23:32:09 CST 2022
//
//
// Ports:
// Name                         I/O  size props
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//
`include "/opt/bsc/lib/Verilog.Vivado/BRAM2.v"
`include "/opt/bsc/lib/Verilog.Vivado/SizedFIFO.v"
`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTb(CLK,
	    RST_N);
  input  CLK;
  input  RST_N;

  // inlined wires
  wire [63 : 0] pgm_reader_pixel_fifo_wDataOut$wget;
  wire pgm_reader_fsm_start_wire$whas,
       pgm_reader_fsm_state_set_pw$whas,
       start_wire$whas,
       state_set_pw$whas;

  // register jj_delay_count
  reg [13 : 0] jj_delay_count;
  wire [13 : 0] jj_delay_count$D_IN;
  wire jj_delay_count$EN;

  // register jpg_file
  reg [31 : 0] jpg_file;
  wire [31 : 0] jpg_file$D_IN;
  wire jpg_file$EN;

  // register pgm_reader_filep
  reg [31 : 0] pgm_reader_filep;
  wire [31 : 0] pgm_reader_filep$D_IN;
  wire pgm_reader_filep$EN;

  // register pgm_reader_fsm_start_reg
  reg pgm_reader_fsm_start_reg;
  wire pgm_reader_fsm_start_reg$D_IN, pgm_reader_fsm_start_reg$EN;

  // register pgm_reader_fsm_start_reg_1
  reg pgm_reader_fsm_start_reg_1;
  wire pgm_reader_fsm_start_reg_1$D_IN, pgm_reader_fsm_start_reg_1$EN;

  // register pgm_reader_fsm_state_can_overlap
  reg pgm_reader_fsm_state_can_overlap;
  wire pgm_reader_fsm_state_can_overlap$D_IN,
       pgm_reader_fsm_state_can_overlap$EN;

  // register pgm_reader_fsm_state_fired
  reg pgm_reader_fsm_state_fired;
  wire pgm_reader_fsm_state_fired$D_IN, pgm_reader_fsm_state_fired$EN;

  // register pgm_reader_fsm_state_mkFSMstate
  reg [4 : 0] pgm_reader_fsm_state_mkFSMstate;
  reg [4 : 0] pgm_reader_fsm_state_mkFSMstate$D_IN;
  wire pgm_reader_fsm_state_mkFSMstate$EN;

  // register pgm_reader_i
  reg [31 : 0] pgm_reader_i;
  reg [31 : 0] pgm_reader_i$D_IN;
  wire pgm_reader_i$EN;

  // register pgm_reader_image_params_0
  reg [31 : 0] pgm_reader_image_params_0;
  wire [31 : 0] pgm_reader_image_params_0$D_IN;
  wire pgm_reader_image_params_0$EN;

  // register pgm_reader_image_params_1
  reg [31 : 0] pgm_reader_image_params_1;
  wire [31 : 0] pgm_reader_image_params_1$D_IN;
  wire pgm_reader_image_params_1$EN;

  // register pgm_reader_image_params_2
  reg [31 : 0] pgm_reader_image_params_2;
  wire [31 : 0] pgm_reader_image_params_2$D_IN;
  wire pgm_reader_image_params_2$EN;

  // register pgm_reader_j
  reg [31 : 0] pgm_reader_j;
  wire [31 : 0] pgm_reader_j$D_IN;
  wire pgm_reader_j$EN;

  // register pgm_reader_load_pixels
  reg [63 : 0] pgm_reader_load_pixels;
  wire [63 : 0] pgm_reader_load_pixels$D_IN;
  wire pgm_reader_load_pixels$EN;

  // register pgm_reader_pixel_fifo_rCache
  reg [87 : 0] pgm_reader_pixel_fifo_rCache;
  wire [87 : 0] pgm_reader_pixel_fifo_rCache$D_IN;
  wire pgm_reader_pixel_fifo_rCache$EN;

  // register pgm_reader_pixel_fifo_rRdPtr
  reg [22 : 0] pgm_reader_pixel_fifo_rRdPtr;
  wire [22 : 0] pgm_reader_pixel_fifo_rRdPtr$D_IN;
  wire pgm_reader_pixel_fifo_rRdPtr$EN;

  // register pgm_reader_pixel_fifo_rWrPtr
  reg [22 : 0] pgm_reader_pixel_fifo_rWrPtr;
  wire [22 : 0] pgm_reader_pixel_fifo_rWrPtr$D_IN;
  wire pgm_reader_pixel_fifo_rWrPtr$EN;

  // register running
  reg running;
  wire running$D_IN, running$EN;

  // register start_reg
  reg start_reg;
  wire start_reg$D_IN, start_reg$EN;

  // register start_reg_1
  reg start_reg_1;
  wire start_reg_1$D_IN, start_reg_1$EN;

  // register state_can_overlap
  reg state_can_overlap;
  wire state_can_overlap$D_IN, state_can_overlap$EN;

  // register state_fired
  reg state_fired;
  wire state_fired$D_IN, state_fired$EN;

  // register state_mkFSMstate
  reg [2 : 0] state_mkFSMstate;
  reg [2 : 0] state_mkFSMstate$D_IN;
  wire state_mkFSMstate$EN;

  // ports of submodule jpg_encoder
  wire [127 : 0] jpg_encoder$get;
  wire [63 : 0] jpg_encoder$put_pixels;
  wire [8 : 0] jpg_encoder$init_xtile, jpg_encoder$init_ytile;
  wire jpg_encoder$EN_init,
       jpg_encoder$EN_put,
       jpg_encoder$EN_waitTillDone,
       jpg_encoder$RDY_get,
       jpg_encoder$RDY_init,
       jpg_encoder$RDY_put;

  // ports of submodule pgm_reader_pixel_fifo_memory
  wire [63 : 0] pgm_reader_pixel_fifo_memory$DIA,
		pgm_reader_pixel_fifo_memory$DIB,
		pgm_reader_pixel_fifo_memory$DOB;
  wire [21 : 0] pgm_reader_pixel_fifo_memory$ADDRA,
		pgm_reader_pixel_fifo_memory$ADDRB;
  wire pgm_reader_pixel_fifo_memory$ENA,
       pgm_reader_pixel_fifo_memory$ENB,
       pgm_reader_pixel_fifo_memory$WEA,
       pgm_reader_pixel_fifo_memory$WEB;

  // rule scheduling signals
  wire WILL_FIRE_RL_action_d_init_np,
       WILL_FIRE_RL_action_l20c7,
       WILL_FIRE_RL_action_l25c7,
       WILL_FIRE_RL_action_l36c10,
       WILL_FIRE_RL_action_np,
       WILL_FIRE_RL_fsm_start,
       WILL_FIRE_RL_idle_l19c15,
       WILL_FIRE_RL_idle_l19c15_1,
       WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7,
       WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7,
       WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10,
       WILL_FIRE_RL_pgm_reader_fsm_action_l32c7,
       WILL_FIRE_RL_pgm_reader_fsm_action_l42c30,
       WILL_FIRE_RL_pgm_reader_fsm_action_l52c28,
       WILL_FIRE_RL_pgm_reader_fsm_action_l67c33,
       WILL_FIRE_RL_pgm_reader_fsm_action_l71c20,
       WILL_FIRE_RL_pgm_reader_fsm_action_l74c7,
       WILL_FIRE_RL_pgm_reader_fsm_fsm_start,
       WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23;

  // inputs to muxes for submodule ports
  wire [31 : 0] MUX_pgm_reader_i$write_1__VAL_1,
		MUX_pgm_reader_i$write_1__VAL_4,
		MUX_pgm_reader_j$write_1__VAL_1;
  wire [13 : 0] MUX_jj_delay_count$write_1__VAL_1;
  wire MUX_pgm_reader_i$write_1__SEL_1,
       MUX_pgm_reader_i$write_1__SEL_5,
       MUX_start_reg$write_1__SEL_2,
       MUX_state_mkFSMstate$write_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] TASK_fopen___d237;
  reg [31 : 0] b__h50673;
  reg [31 : 0] b__h51881;
  reg [31 : 0] TASK_fgetc___d156;
  reg [31 : 0] TASK_fopen___d67;
  reg TASK_fgetc_7_SLT_0x30___d98;
  reg TASK_fgetc_7_SLE_0x39___d100;
  reg NOT_TASK_fgetc_0_EQ_SEL_ARR_0x50_0x35_1_pgm_re_ETC___d84;
  reg TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d136;
  // synopsys translate_on

  // remaining internal signals
  reg [31 : 0] CASE_pgm_reader_i_0_0x50_1_0x35_DONTCARE__q1,
	       SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107;
  wire [63 : 0] SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d108,
		pgm_reader_image_params_0_03_MUL_pgm_reader_im_ETC___d141;
  wire [31 : 0] IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d248,
		IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d265,
		IF_pgm_reader_image_params_0_BIT_31_THEN_NEG_I_ETC__q2,
		IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d257,
		IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d269,
		IF_pgm_reader_image_params_1_BIT_31_THEN_NEG_I_ETC__q3;
  wire [22 : 0] x__h3171, x__h5474;
  wire NOT_IF_pgm_reader_image_params_0_03_BIT_31_46__ETC___d264,
       TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d128,
       abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304,
       pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183,
       pgm_reader_i_2_SLT_2___d73,
       pgm_reader_i_2_SLT_3___d90,
       pgm_reader_i_2_SLT_pgm_reader_image_params_0_0_ETC___d143,
       pgm_reader_j_49_SLT_8___d150,
       pgm_reader_pixel_fifo_rRdPtr_read__7_EQ_pgm_re_ETC___d273;

  // submodule jpg_encoder
  mkJpegEncoder jpg_encoder(.CLK(CLK),
			    .RST_N(RST_N),
			    .init_xtile(jpg_encoder$init_xtile),
			    .init_ytile(jpg_encoder$init_ytile),
			    .put_pixels(jpg_encoder$put_pixels),
			    .EN_init(jpg_encoder$EN_init),
			    .EN_waitTillDone(jpg_encoder$EN_waitTillDone),
			    .EN_put(jpg_encoder$EN_put),
			    .RDY_init(jpg_encoder$RDY_init),
			    .RDY_waitTillDone(),
			    .RDY_put(jpg_encoder$RDY_put),
			    .get(jpg_encoder$get),
			    .RDY_get(jpg_encoder$RDY_get));

  // submodule pgm_reader_pixel_fifo_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd22),
	  .DATA_WIDTH(32'd64),
	  .MEMSIZE(23'd4194304)) pgm_reader_pixel_fifo_memory(.CLKA(CLK),
							      .CLKB(CLK),
							      .ADDRA(pgm_reader_pixel_fifo_memory$ADDRA),
							      .ADDRB(pgm_reader_pixel_fifo_memory$ADDRB),
							      .DIA(pgm_reader_pixel_fifo_memory$DIA),
							      .DIB(pgm_reader_pixel_fifo_memory$DIB),
							      .WEA(pgm_reader_pixel_fifo_memory$WEA),
							      .WEB(pgm_reader_pixel_fifo_memory$WEB),
							      .ENA(pgm_reader_pixel_fifo_memory$ENA),
							      .ENB(pgm_reader_pixel_fifo_memory$ENB),
							      .DOA(),
							      .DOB(pgm_reader_pixel_fifo_memory$DOB));

  // rule RL_action_d_init_np
  assign WILL_FIRE_RL_action_d_init_np =
	     pgm_reader_image_params_0 != 32'd0 &&
	     pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 &&
	     !pgm_reader_fsm_start_reg &&
	     pgm_reader_pixel_fifo_rRdPtr_read__7_EQ_pgm_re_ETC___d273 &&
	     (state_mkFSMstate == 3'd2 || state_mkFSMstate == 3'd3) ;

  // rule RL_action_np
  assign WILL_FIRE_RL_action_np =
	     jj_delay_count != 14'd9999 &&
	     (state_mkFSMstate == 3'd4 || state_mkFSMstate == 3'd5) ;

  // rule RL_fsm_start
  assign WILL_FIRE_RL_fsm_start =
	     abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304 &&
	     start_reg ;

  // rule RL_idle_l19c15
  assign WILL_FIRE_RL_idle_l19c15 =
	     jj_delay_count == 14'd9999 && !start_wire$whas &&
	     state_mkFSMstate == 3'd4 ;

  // rule RL_idle_l19c15_1
  assign WILL_FIRE_RL_idle_l19c15_1 =
	     jj_delay_count == 14'd9999 && !start_wire$whas &&
	     state_mkFSMstate == 3'd5 ;

  // rule RL_action_l20c7
  assign WILL_FIRE_RL_action_l20c7 =
	     start_wire$whas && state_mkFSMstate == 3'd0 ||
	     jj_delay_count == 14'd9999 && start_wire$whas &&
	     state_mkFSMstate == 3'd4 ||
	     jj_delay_count == 14'd9999 && start_wire$whas &&
	     state_mkFSMstate == 3'd5 ;

  // rule RL_action_l36c10
  assign WILL_FIRE_RL_action_l36c10 =
	     !pgm_reader_pixel_fifo_rRdPtr_read__7_EQ_pgm_re_ETC___d273 &&
	     (pgm_reader_image_params_0 ^ 32'h80000000) > 32'h80000000 &&
	     pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 &&
	     !pgm_reader_fsm_start_reg &&
	     jpg_encoder$RDY_put &&
	     (state_mkFSMstate == 3'd2 || state_mkFSMstate == 3'd3) ;

  // rule RL_action_l25c7
  assign WILL_FIRE_RL_action_l25c7 =
	     (pgm_reader_image_params_0 ^ 32'h80000000) > 32'h80000000 &&
	     pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 &&
	     !pgm_reader_fsm_start_reg &&
	     jpg_encoder$RDY_init &&
	     state_mkFSMstate == 3'd1 ;

  // rule RL_pgm_reader_fsm_action_l42c30
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 =
	     pgm_reader_i_2_SLT_2___d73 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd2 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd4) ;

  // rule RL_pgm_reader_fsm_action_f_init_l52c7
  assign WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 =
	     !pgm_reader_i_2_SLT_2___d73 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd2 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd4) ;

  // rule RL_pgm_reader_fsm_action_l52c28
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 =
	     pgm_reader_i_2_SLT_3___d90 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd5 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd7) ;

  // rule RL_pgm_reader_fsm_action_f_init_l66c7
  assign WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 =
	     !pgm_reader_i_2_SLT_3___d90 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd5 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd7) ;

  // rule RL_pgm_reader_fsm_action_f_init_l67c10
  assign WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 =
	     pgm_reader_i_2_SLT_pgm_reader_image_params_0_0_ETC___d143 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd8 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd13) ;

  // rule RL_pgm_reader_fsm_action_l67c33
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 =
	     pgm_reader_j_49_SLT_8___d150 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd9 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd11) ;

  // rule RL_pgm_reader_fsm_action_l71c20
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 =
	     pgm_reader_pixel_fifo_rRdPtr + 23'd2097152 !=
	     pgm_reader_pixel_fifo_rWrPtr &&
	     !pgm_reader_j_49_SLT_8___d150 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd9 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd11) ;

  // rule RL_pgm_reader_fsm_action_l74c7
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 =
	     !pgm_reader_i_2_SLT_pgm_reader_image_params_0_0_ETC___d143 &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd8 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd13) ;

  // rule RL_pgm_reader_fsm_fsm_start
  assign WILL_FIRE_RL_pgm_reader_fsm_fsm_start =
	     pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 &&
	     pgm_reader_fsm_start_reg ;

  // rule RL_pgm_reader_fsm_action_l32c7
  assign WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 =
	     pgm_reader_fsm_start_wire$whas &&
	     (pgm_reader_fsm_state_mkFSMstate == 5'd0 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd15) ;

  // rule RL_pgm_reader_fsm_idle_l30c23
  assign WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23 =
	     !pgm_reader_fsm_start_wire$whas &&
	     pgm_reader_fsm_state_mkFSMstate == 5'd15 ;

  // inputs to muxes for submodule ports
  assign MUX_pgm_reader_i$write_1__SEL_1 =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	     TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d128 ;
  assign MUX_pgm_reader_i$write_1__SEL_5 =
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd1 ;
  assign MUX_start_reg$write_1__SEL_2 =
	     abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304 &&
	     !start_reg &&
	     !running ;
  assign MUX_state_mkFSMstate$write_1__SEL_1 =
	     WILL_FIRE_RL_idle_l19c15_1 || WILL_FIRE_RL_idle_l19c15 ;
  assign MUX_jj_delay_count$write_1__VAL_1 = jj_delay_count + 14'd1 ;
  assign MUX_pgm_reader_i$write_1__VAL_1 = pgm_reader_i + 32'd1 ;
  assign MUX_pgm_reader_i$write_1__VAL_4 = pgm_reader_i + 32'd8 ;
  assign MUX_pgm_reader_j$write_1__VAL_1 = pgm_reader_j + 32'd1 ;

  // inlined wires
  assign pgm_reader_pixel_fifo_wDataOut$wget =
	     (pgm_reader_pixel_fifo_rCache[87] &&
	      pgm_reader_pixel_fifo_rCache[86:64] ==
	      pgm_reader_pixel_fifo_rRdPtr) ?
	       pgm_reader_pixel_fifo_rCache[63:0] :
	       pgm_reader_pixel_fifo_memory$DOB ;
  assign pgm_reader_fsm_start_wire$whas =
	     WILL_FIRE_RL_pgm_reader_fsm_fsm_start ||
	     pgm_reader_fsm_start_reg_1 && !pgm_reader_fsm_state_fired ;
  assign start_wire$whas =
	     WILL_FIRE_RL_fsm_start || start_reg_1 && !state_fired ;
  assign pgm_reader_fsm_state_set_pw$whas =
	     WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd14 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd1 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 ;
  assign state_set_pw$whas =
	     WILL_FIRE_RL_idle_l19c15_1 || WILL_FIRE_RL_idle_l19c15 ||
	     WILL_FIRE_RL_action_np ||
	     WILL_FIRE_RL_action_d_init_np ||
	     WILL_FIRE_RL_action_l36c10 ||
	     WILL_FIRE_RL_action_l25c7 ||
	     WILL_FIRE_RL_action_l20c7 ;

  // register jj_delay_count
  assign jj_delay_count$D_IN =
	     WILL_FIRE_RL_action_np ?
	       MUX_jj_delay_count$write_1__VAL_1 :
	       14'd0 ;
  assign jj_delay_count$EN =
	     WILL_FIRE_RL_action_np || WILL_FIRE_RL_action_d_init_np ;

  // register jpg_file
  assign jpg_file$D_IN = TASK_fopen___d237 ;
  assign jpg_file$EN = WILL_FIRE_RL_action_l20c7 ;

  // register pgm_reader_filep
  assign pgm_reader_filep$D_IN = TASK_fopen___d67 ;
  assign pgm_reader_filep$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 &&
	     TASK_fopen___d67 != 32'd0 ;

  // register pgm_reader_fsm_start_reg
  assign pgm_reader_fsm_start_reg$D_IN =
	     !WILL_FIRE_RL_pgm_reader_fsm_fsm_start ;
  assign pgm_reader_fsm_start_reg$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_fsm_start ||
	     pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 &&
	     !pgm_reader_fsm_start_reg &&
	     pgm_reader_image_params_0 == 32'd0 ;

  // register pgm_reader_fsm_start_reg_1
  assign pgm_reader_fsm_start_reg_1$D_IN = pgm_reader_fsm_start_wire$whas ;
  assign pgm_reader_fsm_start_reg_1$EN = 1'd1 ;

  // register pgm_reader_fsm_state_can_overlap
  assign pgm_reader_fsm_state_can_overlap$D_IN =
	     pgm_reader_fsm_state_set_pw$whas ||
	     pgm_reader_fsm_state_can_overlap ;
  assign pgm_reader_fsm_state_can_overlap$EN = 1'd1 ;

  // register pgm_reader_fsm_state_fired
  assign pgm_reader_fsm_state_fired$D_IN = pgm_reader_fsm_state_set_pw$whas ;
  assign pgm_reader_fsm_state_fired$EN = 1'd1 ;

  // register pgm_reader_fsm_state_mkFSMstate
  always@(WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 or
	  pgm_reader_fsm_state_mkFSMstate or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 or
	  WILL_FIRE_RL_pgm_reader_fsm_action_l74c7)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd0;
      WILL_FIRE_RL_pgm_reader_fsm_action_l32c7:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd1;
      pgm_reader_fsm_state_mkFSMstate == 5'd1:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd2;
      WILL_FIRE_RL_pgm_reader_fsm_action_l42c30:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd3;
      pgm_reader_fsm_state_mkFSMstate == 5'd3:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd4;
      WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd5;
      WILL_FIRE_RL_pgm_reader_fsm_action_l52c28:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd6;
      pgm_reader_fsm_state_mkFSMstate == 5'd6:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd7;
      WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd8;
      WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd9;
      WILL_FIRE_RL_pgm_reader_fsm_action_l67c33:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd10;
      pgm_reader_fsm_state_mkFSMstate == 5'd10:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd11;
      WILL_FIRE_RL_pgm_reader_fsm_action_l71c20:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd12;
      pgm_reader_fsm_state_mkFSMstate == 5'd12:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd13;
      WILL_FIRE_RL_pgm_reader_fsm_action_l74c7:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd14;
      pgm_reader_fsm_state_mkFSMstate == 5'd14:
	  pgm_reader_fsm_state_mkFSMstate$D_IN = 5'd15;
      default: pgm_reader_fsm_state_mkFSMstate$D_IN =
		   5'b01010 /* unspecified value */ ;
    endcase
  end
  assign pgm_reader_fsm_state_mkFSMstate$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_idle_l30c23 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd1 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd14 ;

  // register pgm_reader_i
  always@(MUX_pgm_reader_i$write_1__SEL_1 or
	  MUX_pgm_reader_i$write_1__VAL_1 or
	  pgm_reader_fsm_state_mkFSMstate or
	  pgm_reader_i or
	  MUX_pgm_reader_i$write_1__VAL_4 or MUX_pgm_reader_i$write_1__SEL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_pgm_reader_i$write_1__SEL_1:
	  pgm_reader_i$D_IN = MUX_pgm_reader_i$write_1__VAL_1;
      pgm_reader_fsm_state_mkFSMstate == 5'd6:
	  pgm_reader_i$D_IN = pgm_reader_i;
      pgm_reader_fsm_state_mkFSMstate == 5'd3:
	  pgm_reader_i$D_IN = MUX_pgm_reader_i$write_1__VAL_1;
      pgm_reader_fsm_state_mkFSMstate == 5'd12:
	  pgm_reader_i$D_IN = MUX_pgm_reader_i$write_1__VAL_4;
      MUX_pgm_reader_i$write_1__SEL_5: pgm_reader_i$D_IN = 32'd0;
      default: pgm_reader_i$D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign pgm_reader_i$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	     TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d128 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	     pgm_reader_fsm_state_mkFSMstate == 5'd1 ;

  // register pgm_reader_image_params_0
  assign pgm_reader_image_params_0$D_IN =
	     SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d108[31:0] +
	     b__h51881 -
	     32'h00000030 ;
  assign pgm_reader_image_params_0$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	     pgm_reader_i == 32'd0 &&
	     !TASK_fgetc_7_SLT_0x30___d98 &&
	     TASK_fgetc_7_SLE_0x39___d100 ;

  // register pgm_reader_image_params_1
  assign pgm_reader_image_params_1$D_IN = pgm_reader_image_params_0$D_IN ;
  assign pgm_reader_image_params_1$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	     pgm_reader_i == 32'd1 &&
	     !TASK_fgetc_7_SLT_0x30___d98 &&
	     TASK_fgetc_7_SLE_0x39___d100 ;

  // register pgm_reader_image_params_2
  assign pgm_reader_image_params_2$D_IN = pgm_reader_image_params_0$D_IN ;
  assign pgm_reader_image_params_2$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	     pgm_reader_i == 32'd2 &&
	     !TASK_fgetc_7_SLT_0x30___d98 &&
	     TASK_fgetc_7_SLE_0x39___d100 ;

  // register pgm_reader_j
  assign pgm_reader_j$D_IN =
	     (pgm_reader_fsm_state_mkFSMstate == 5'd10) ?
	       MUX_pgm_reader_j$write_1__VAL_1 :
	       32'd0 ;
  assign pgm_reader_j$EN =
	     pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	     WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ;

  // register pgm_reader_load_pixels
  assign pgm_reader_load_pixels$D_IN =
	     { TASK_fgetc___d156[7:0], pgm_reader_load_pixels[63:8] } ;
  assign pgm_reader_load_pixels$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ;

  // register pgm_reader_pixel_fifo_rCache
  assign pgm_reader_pixel_fifo_rCache$D_IN =
	     { 1'd1,
	       pgm_reader_pixel_fifo_rWrPtr,
	       WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ?
		 pgm_reader_load_pixels :
		 64'd0 } ;
  assign pgm_reader_pixel_fifo_rCache$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ;

  // register pgm_reader_pixel_fifo_rRdPtr
  assign pgm_reader_pixel_fifo_rRdPtr$D_IN = x__h5474 ;
  assign pgm_reader_pixel_fifo_rRdPtr$EN = WILL_FIRE_RL_action_l36c10 ;

  // register pgm_reader_pixel_fifo_rWrPtr
  assign pgm_reader_pixel_fifo_rWrPtr$D_IN = x__h3171 ;
  assign pgm_reader_pixel_fifo_rWrPtr$EN =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ;

  // register running
  assign running$D_IN = 1'd1 ;
  assign running$EN = MUX_start_reg$write_1__SEL_2 ;

  // register start_reg
  assign start_reg$D_IN = !WILL_FIRE_RL_fsm_start ;
  assign start_reg$EN =
	     WILL_FIRE_RL_fsm_start ||
	     abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304 &&
	     !start_reg &&
	     !running ;

  // register start_reg_1
  assign start_reg_1$D_IN = start_wire$whas ;
  assign start_reg_1$EN = 1'd1 ;

  // register state_can_overlap
  assign state_can_overlap$D_IN = state_set_pw$whas || state_can_overlap ;
  assign state_can_overlap$EN = 1'd1 ;

  // register state_fired
  assign state_fired$D_IN = state_set_pw$whas ;
  assign state_fired$EN = 1'd1 ;

  // register state_mkFSMstate
  always@(MUX_state_mkFSMstate$write_1__SEL_1 or
	  WILL_FIRE_RL_action_l20c7 or
	  WILL_FIRE_RL_action_l25c7 or
	  WILL_FIRE_RL_action_l36c10 or
	  WILL_FIRE_RL_action_d_init_np or WILL_FIRE_RL_action_np)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_state_mkFSMstate$write_1__SEL_1: state_mkFSMstate$D_IN = 3'd0;
      WILL_FIRE_RL_action_l20c7: state_mkFSMstate$D_IN = 3'd1;
      WILL_FIRE_RL_action_l25c7: state_mkFSMstate$D_IN = 3'd2;
      WILL_FIRE_RL_action_l36c10: state_mkFSMstate$D_IN = 3'd3;
      WILL_FIRE_RL_action_d_init_np: state_mkFSMstate$D_IN = 3'd4;
      WILL_FIRE_RL_action_np: state_mkFSMstate$D_IN = 3'd5;
      default: state_mkFSMstate$D_IN = 3'b010 /* unspecified value */ ;
    endcase
  end
  assign state_mkFSMstate$EN =
	     WILL_FIRE_RL_idle_l19c15_1 || WILL_FIRE_RL_idle_l19c15 ||
	     WILL_FIRE_RL_action_l20c7 ||
	     WILL_FIRE_RL_action_l25c7 ||
	     WILL_FIRE_RL_action_l36c10 ||
	     WILL_FIRE_RL_action_d_init_np ||
	     WILL_FIRE_RL_action_np ;

  // submodule jpg_encoder
  assign jpg_encoder$init_xtile =
	     IF_pgm_reader_image_params_0_BIT_31_THEN_NEG_I_ETC__q2[8:0] ;
  assign jpg_encoder$init_ytile =
	     IF_pgm_reader_image_params_1_BIT_31_THEN_NEG_I_ETC__q3[8:0] ;
  assign jpg_encoder$put_pixels = pgm_reader_pixel_fifo_wDataOut$wget ;
  assign jpg_encoder$EN_init = WILL_FIRE_RL_action_l25c7 ;
  assign jpg_encoder$EN_waitTillDone = 1'b0 ;
  assign jpg_encoder$EN_put = WILL_FIRE_RL_action_l36c10 ;

  // submodule pgm_reader_pixel_fifo_memory
  assign pgm_reader_pixel_fifo_memory$ADDRA =
	     pgm_reader_pixel_fifo_rWrPtr[21:0] ;
  assign pgm_reader_pixel_fifo_memory$ADDRB =
	     WILL_FIRE_RL_action_l36c10 ?
	       x__h5474[21:0] :
	       pgm_reader_pixel_fifo_rRdPtr[21:0] ;
  assign pgm_reader_pixel_fifo_memory$DIA =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ?
	       pgm_reader_load_pixels :
	       64'd0 ;
  assign pgm_reader_pixel_fifo_memory$DIB =
	     64'hAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign pgm_reader_pixel_fifo_memory$WEA =
	     WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ;
  assign pgm_reader_pixel_fifo_memory$WEB = 1'd0 ;
  assign pgm_reader_pixel_fifo_memory$ENA = 1'b1 ;
  assign pgm_reader_pixel_fifo_memory$ENB = 1'b1 ;

  // remaining internal signals
  assign IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d248 =
	     pgm_reader_image_params_0[31] ?
	       -pgm_reader_image_params_0 :
	       pgm_reader_image_params_0 ;
  assign IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d265 =
	     IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d248 >> 3 ;
  assign IF_pgm_reader_image_params_0_BIT_31_THEN_NEG_I_ETC__q2 =
	     pgm_reader_image_params_0[31] ?
	       -IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d265 :
	       IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d265 ;
  assign IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d257 =
	     pgm_reader_image_params_1[31] ?
	       -pgm_reader_image_params_1 :
	       pgm_reader_image_params_1 ;
  assign IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d269 =
	     IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d257 >> 3 ;
  assign IF_pgm_reader_image_params_1_BIT_31_THEN_NEG_I_ETC__q3 =
	     pgm_reader_image_params_1[31] ?
	       -IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d269 :
	       IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d269 ;
  assign NOT_IF_pgm_reader_image_params_0_03_BIT_31_46__ETC___d264 =
	     (pgm_reader_image_params_0[31] ?
		-{ 29'd0,
		   IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d248[2:0] } :
		{ 29'd0,
		  IF_pgm_reader_image_params_0_03_BIT_31_46_THEN_ETC___d248[2:0] }) !=
	     32'd0 ||
	     (pgm_reader_image_params_1[31] ?
		-{ 29'd0,
		   IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d257[2:0] } :
		{ 29'd0,
		  IF_pgm_reader_image_params_1_04_BIT_31_55_THEN_ETC___d257[2:0] }) !=
	     32'd0 ;
  assign SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d108 =
	     SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 *
	     32'd10 ;
  assign TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d128 =
	     (TASK_fgetc_7_SLT_0x30___d98 || !TASK_fgetc_7_SLE_0x39___d100) &&
	     (b__h51881 == 32'h00000020 || b__h51881 == 32'h00000009 ||
	      b__h51881 == 32'h0000000D ||
	      b__h51881 == 32'h0000000A) &&
	     (SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 ^
	      32'h80000000) >
	     32'h80000000 ;
  assign abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304 =
	     (state_mkFSMstate == 3'd0 ||
	      jj_delay_count == 14'd9999 && state_mkFSMstate == 3'd4 ||
	      jj_delay_count == 14'd9999 && state_mkFSMstate == 3'd5) &&
	     (!start_reg_1 || state_fired) ;
  assign pgm_reader_fsm_abort_whas__4_AND_pgm_reader_fs_ETC___d183 =
	     (pgm_reader_fsm_state_mkFSMstate == 5'd0 ||
	      pgm_reader_fsm_state_mkFSMstate == 5'd15) &&
	     (!pgm_reader_fsm_start_reg_1 || pgm_reader_fsm_state_fired) ;
  assign pgm_reader_i_2_SLT_2___d73 =
	     (pgm_reader_i ^ 32'h80000000) < 32'h80000002 ;
  assign pgm_reader_i_2_SLT_3___d90 =
	     (pgm_reader_i ^ 32'h80000000) < 32'h80000003 ;
  assign pgm_reader_i_2_SLT_pgm_reader_image_params_0_0_ETC___d143 =
	     (pgm_reader_i ^ 32'h80000000) <
	     (pgm_reader_image_params_0_03_MUL_pgm_reader_im_ETC___d141[31:0] ^
	      32'h80000000) ;
  assign pgm_reader_image_params_0_03_MUL_pgm_reader_im_ETC___d141 =
	     pgm_reader_image_params_0 * pgm_reader_image_params_1 ;
  assign pgm_reader_j_49_SLT_8___d150 =
	     (pgm_reader_j ^ 32'h80000000) < 32'h80000008 ;
  assign pgm_reader_pixel_fifo_rRdPtr_read__7_EQ_pgm_re_ETC___d273 =
	     pgm_reader_pixel_fifo_rRdPtr == pgm_reader_pixel_fifo_rWrPtr ;
  assign x__h3171 = pgm_reader_pixel_fifo_rWrPtr + 23'd1 ;
  assign x__h5474 = pgm_reader_pixel_fifo_rRdPtr + 23'd1 ;
  always@(pgm_reader_i or
	  pgm_reader_image_params_0 or
	  pgm_reader_image_params_1 or pgm_reader_image_params_2)
  begin
    case (pgm_reader_i)
      32'd0:
	  SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 =
	      pgm_reader_image_params_0;
      32'd1:
	  SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 =
	      pgm_reader_image_params_1;
      32'd2:
	  SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 =
	      pgm_reader_image_params_2;
      default: SEL_ARR_pgm_reader_image_params_0_03_pgm_reade_ETC___d107 =
		   32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(pgm_reader_i)
  begin
    case (pgm_reader_i)
      32'd0: CASE_pgm_reader_i_0_0x50_1_0x35_DONTCARE__q1 = 32'h00000050;
      32'd1: CASE_pgm_reader_i_0_0x50_1_0x35_DONTCARE__q1 = 32'h00000035;
      default: CASE_pgm_reader_i_0_0x50_1_0x35_DONTCARE__q1 =
		   32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        jj_delay_count <= `BSV_ASSIGNMENT_DELAY 14'd0;
	jpg_file <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_filep <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_fsm_start_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pgm_reader_fsm_start_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pgm_reader_fsm_state_can_overlap <= `BSV_ASSIGNMENT_DELAY 1'd1;
	pgm_reader_fsm_state_fired <= `BSV_ASSIGNMENT_DELAY 1'd0;
	pgm_reader_fsm_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY 5'd0;
	pgm_reader_i <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_image_params_0 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_image_params_1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_image_params_2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_j <= `BSV_ASSIGNMENT_DELAY 32'd0;
	pgm_reader_load_pixels <= `BSV_ASSIGNMENT_DELAY 64'd0;
	pgm_reader_pixel_fifo_rCache <= `BSV_ASSIGNMENT_DELAY
	    88'h2AAAAAAAAAAAAAAAAAAAAA;
	pgm_reader_pixel_fifo_rRdPtr <= `BSV_ASSIGNMENT_DELAY 23'd0;
	pgm_reader_pixel_fifo_rWrPtr <= `BSV_ASSIGNMENT_DELAY 23'd0;
	running <= `BSV_ASSIGNMENT_DELAY 1'd0;
	start_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	start_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	state_can_overlap <= `BSV_ASSIGNMENT_DELAY 1'd1;
	state_fired <= `BSV_ASSIGNMENT_DELAY 1'd0;
	state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY 3'd0;
      end
    else
      begin
        if (jj_delay_count$EN)
	  jj_delay_count <= `BSV_ASSIGNMENT_DELAY jj_delay_count$D_IN;
	if (jpg_file$EN) jpg_file <= `BSV_ASSIGNMENT_DELAY jpg_file$D_IN;
	if (pgm_reader_filep$EN)
	  pgm_reader_filep <= `BSV_ASSIGNMENT_DELAY pgm_reader_filep$D_IN;
	if (pgm_reader_fsm_start_reg$EN)
	  pgm_reader_fsm_start_reg <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_fsm_start_reg$D_IN;
	if (pgm_reader_fsm_start_reg_1$EN)
	  pgm_reader_fsm_start_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_fsm_start_reg_1$D_IN;
	if (pgm_reader_fsm_state_can_overlap$EN)
	  pgm_reader_fsm_state_can_overlap <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_fsm_state_can_overlap$D_IN;
	if (pgm_reader_fsm_state_fired$EN)
	  pgm_reader_fsm_state_fired <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_fsm_state_fired$D_IN;
	if (pgm_reader_fsm_state_mkFSMstate$EN)
	  pgm_reader_fsm_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_fsm_state_mkFSMstate$D_IN;
	if (pgm_reader_i$EN)
	  pgm_reader_i <= `BSV_ASSIGNMENT_DELAY pgm_reader_i$D_IN;
	if (pgm_reader_image_params_0$EN)
	  pgm_reader_image_params_0 <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_image_params_0$D_IN;
	if (pgm_reader_image_params_1$EN)
	  pgm_reader_image_params_1 <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_image_params_1$D_IN;
	if (pgm_reader_image_params_2$EN)
	  pgm_reader_image_params_2 <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_image_params_2$D_IN;
	if (pgm_reader_j$EN)
	  pgm_reader_j <= `BSV_ASSIGNMENT_DELAY pgm_reader_j$D_IN;
	if (pgm_reader_load_pixels$EN)
	  pgm_reader_load_pixels <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_load_pixels$D_IN;
	if (pgm_reader_pixel_fifo_rCache$EN)
	  pgm_reader_pixel_fifo_rCache <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_pixel_fifo_rCache$D_IN;
	if (pgm_reader_pixel_fifo_rRdPtr$EN)
	  pgm_reader_pixel_fifo_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_pixel_fifo_rRdPtr$D_IN;
	if (pgm_reader_pixel_fifo_rWrPtr$EN)
	  pgm_reader_pixel_fifo_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      pgm_reader_pixel_fifo_rWrPtr$D_IN;
	if (running$EN) running <= `BSV_ASSIGNMENT_DELAY running$D_IN;
	if (start_reg$EN) start_reg <= `BSV_ASSIGNMENT_DELAY start_reg$D_IN;
	if (start_reg_1$EN)
	  start_reg_1 <= `BSV_ASSIGNMENT_DELAY start_reg_1$D_IN;
	if (state_can_overlap$EN)
	  state_can_overlap <= `BSV_ASSIGNMENT_DELAY state_can_overlap$D_IN;
	if (state_fired$EN)
	  state_fired <= `BSV_ASSIGNMENT_DELAY state_fired$D_IN;
	if (state_mkFSMstate$EN)
	  state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY state_mkFSMstate$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    jj_delay_count = 14'h2AAA;
    jpg_file = 32'hAAAAAAAA;
    pgm_reader_filep = 32'hAAAAAAAA;
    pgm_reader_fsm_start_reg = 1'h0;
    pgm_reader_fsm_start_reg_1 = 1'h0;
    pgm_reader_fsm_state_can_overlap = 1'h0;
    pgm_reader_fsm_state_fired = 1'h0;
    pgm_reader_fsm_state_mkFSMstate = 5'h0A;
    pgm_reader_i = 32'hAAAAAAAA;
    pgm_reader_image_params_0 = 32'hAAAAAAAA;
    pgm_reader_image_params_1 = 32'hAAAAAAAA;
    pgm_reader_image_params_2 = 32'hAAAAAAAA;
    pgm_reader_j = 32'hAAAAAAAA;
    pgm_reader_load_pixels = 64'hAAAAAAAAAAAAAAAA;
    pgm_reader_pixel_fifo_rCache = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    pgm_reader_pixel_fifo_rRdPtr = 23'h2AAAAA;
    pgm_reader_pixel_fifo_rWrPtr = 23'h2AAAAA;
    running = 1'h0;
    start_reg = 1'h0;
    start_reg_1 = 1'h0;
    state_can_overlap = 1'h0;
    state_fired = 1'h0;
    state_mkFSMstate = 3'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_d_init_np && WILL_FIRE_RL_action_np)
	$display("Error: \"StmtFSM.bs\", line 41, column 0: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_action_d_init_np] and\n  [RL_action_np] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (running &&
	  abort_whas__93_AND_abort_wget__94_95_OR_state__ETC___d304 &&
	  !start_reg)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (jpg_encoder$RDY_get) $fwrite(jpg_file, "%032x", jpg_encoder$get);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l20c7)
	begin
	  TASK_fopen___d237 = $fopen("out.jpg.txt", "w");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l36c10 &&
	  (WILL_FIRE_RL_action_d_init_np || WILL_FIRE_RL_action_np))
	$display("Error: \"TbJpegEncoder.bsv\", line 36, column 10: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_action_l36c10] and\n  [RL_action_d_init_np, RL_action_np] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l25c7 &&
	  NOT_IF_pgm_reader_image_params_0_03_BIT_31_46__ETC___d264)
	$display("  Error: image width or height is not multiple of 8");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l25c7 &&
	  NOT_IF_pgm_reader_image_params_0_03_BIT_31_46__ETC___d264)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l20c7 &&
	  (WILL_FIRE_RL_action_l25c7 || WILL_FIRE_RL_action_l36c10 ||
	   WILL_FIRE_RL_action_d_init_np ||
	   WILL_FIRE_RL_action_np))
	$display("Error: \"TbJpegEncoder.bsv\", line 20, column 7: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_action_l20c7] and\n  [RL_action_l25c7, RL_action_l36c10, RL_action_d_init_np, RL_action_np] )\n  fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_action_l25c7 &&
	  (WILL_FIRE_RL_action_l36c10 || WILL_FIRE_RL_action_d_init_np ||
	   WILL_FIRE_RL_action_np))
	$display("Error: \"TbJpegEncoder.bsv\", line 25, column 7: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_action_l25c7] and\n  [RL_action_l36c10, RL_action_d_init_np, RL_action_np] ) fired in the same\n  clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l42c30)
	begin
	  b__h50673 = $fgetc(pgm_reader_filep);
	  #0;
	end
    NOT_TASK_fgetc_0_EQ_SEL_ARR_0x50_0x35_1_pgm_re_ETC___d84 =
	b__h50673 != CASE_pgm_reader_i_0_0x50_1_0x35_DONTCARE__q1;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 &&
	  NOT_TASK_fgetc_0_EQ_SEL_ARR_0x50_0x35_1_pgm_re_ETC___d84)
	$display("  Error: file %s header is not P5", "img/in011.pgm");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 &&
	  NOT_TASK_fgetc_0_EQ_SEL_ARR_0x50_0x35_1_pgm_re_ETC___d84)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l52c28)
	begin
	  b__h51881 = $fgetc(pgm_reader_filep);
	  #0;
	end
    TASK_fgetc_7_SLT_0x30___d98 = (b__h51881 ^ 32'h80000000) < 32'h80000030;
    TASK_fgetc_7_SLE_0x39___d100 = (b__h51881 ^ 32'h80000000) <= 32'h80000039;
    TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d136 =
	(TASK_fgetc_7_SLT_0x30___d98 || !TASK_fgetc_7_SLE_0x39___d100) &&
	b__h51881 != 32'h00000020 &&
	b__h51881 != 32'h00000009 &&
	b__h51881 != 32'h0000000D &&
	b__h51881 != 32'h0000000A;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	  TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d136)
	$display("  Error: file %s invalid format", "img/in011.pgm");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	  TASK_fgetc_7_SLT_0x30_8_OR_NOT_TASK_fgetc_7_SL_ETC___d136)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l67c33)
	begin
	  TASK_fgetc___d156 = $fgetc(pgm_reader_filep);
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l74c7) $fclose(pgm_reader_filep);
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd14)
	$display("  Image load done, width=%5d, height=%5d",
		 $signed(pgm_reader_image_params_0),
		 $signed(pgm_reader_image_params_1));
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd1 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 42, column 12: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_init_l42c7] and\n  [RL_pgm_reader_fsm_action_l42c30, RL_pgm_reader_fsm_action_f_update_l42c7,\n  RL_pgm_reader_fsm_action_f_init_l52c7, RL_pgm_reader_fsm_action_l52c28,\n  RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 &&
	  (pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 42, column 30: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l42c30]\n  and [RL_pgm_reader_fsm_action_f_update_l42c7,\n  RL_pgm_reader_fsm_action_f_init_l52c7, RL_pgm_reader_fsm_action_l52c28,\n  RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd3 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 42, column 23: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_update_l42c7] and\n  [RL_pgm_reader_fsm_action_f_init_l52c7, RL_pgm_reader_fsm_action_l52c28,\n  RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 52, column 12: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_init_l52c7] and\n  [RL_pgm_reader_fsm_action_l52c28, RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 &&
	  (pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 52, column 28: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l52c28]\n  and [RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 66, column 12: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_init_l66c7] and\n  [RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd6 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 52, column 23: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_update_l52c7] and\n  [RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 67, column 15: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_init_l67c10] and\n  [RL_pgm_reader_fsm_action_l67c33, RL_pgm_reader_fsm_action_f_update_l67c10,\n  RL_pgm_reader_fsm_action_l71c20, RL_pgm_reader_fsm_action_f_update_l66c7,\n  RL_pgm_reader_fsm_action_l74c7, RL_pgm_reader_fsm_action_l75c7] ) fired in\n  the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 &&
	  (pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 67, column 33: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l67c33]\n  and [RL_pgm_reader_fsm_action_f_update_l67c10,\n  RL_pgm_reader_fsm_action_l71c20, RL_pgm_reader_fsm_action_f_update_l66c7,\n  RL_pgm_reader_fsm_action_l74c7, RL_pgm_reader_fsm_action_l75c7] ) fired in\n  the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 &&
	  (pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 71, column 20: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l71c20]\n  and [RL_pgm_reader_fsm_action_f_update_l66c7,\n  RL_pgm_reader_fsm_action_l74c7, RL_pgm_reader_fsm_action_l75c7] ) fired in\n  the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd10 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 67, column 26: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_update_l67c10] and\n  [RL_pgm_reader_fsm_action_l71c20, RL_pgm_reader_fsm_action_f_update_l66c7,\n  RL_pgm_reader_fsm_action_l74c7, RL_pgm_reader_fsm_action_l75c7] ) fired in\n  the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (pgm_reader_fsm_state_mkFSMstate == 5'd12 &&
	  (WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 66, column 34: (R0001)\n  Mutually exclusive rules (from the ME sets\n  [RL_pgm_reader_fsm_action_f_update_l66c7] and\n  [RL_pgm_reader_fsm_action_l74c7, RL_pgm_reader_fsm_action_l75c7] ) fired in\n  the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 &&
	  pgm_reader_fsm_state_mkFSMstate == 5'd14)
	$display("Error: \"PgmReader.bsv\", line 74, column 7: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l74c7]\n  and [RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l32c7)
	begin
	  TASK_fopen___d67 = $fopen("img/in011.pgm", "rb");
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 &&
	  TASK_fopen___d67 == 32'd0)
	$display("  Error: invalid file: %s", "img/in011.pgm");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 &&
	  TASK_fopen___d67 == 32'd0)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_pgm_reader_fsm_action_l32c7 &&
	  (pgm_reader_fsm_state_mkFSMstate == 5'd1 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l42c30 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd3 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l52c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l52c28 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd6 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l66c7 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_f_init_l67c10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l67c33 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd10 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l71c20 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd12 ||
	   WILL_FIRE_RL_pgm_reader_fsm_action_l74c7 ||
	   pgm_reader_fsm_state_mkFSMstate == 5'd14))
	$display("Error: \"PgmReader.bsv\", line 32, column 7: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_pgm_reader_fsm_action_l32c7]\n  and [RL_pgm_reader_fsm_action_f_init_l42c7, RL_pgm_reader_fsm_action_l42c30,\n  RL_pgm_reader_fsm_action_f_update_l42c7,\n  RL_pgm_reader_fsm_action_f_init_l52c7, RL_pgm_reader_fsm_action_l52c28,\n  RL_pgm_reader_fsm_action_f_update_l52c7,\n  RL_pgm_reader_fsm_action_f_init_l66c7,\n  RL_pgm_reader_fsm_action_f_init_l67c10, RL_pgm_reader_fsm_action_l67c33,\n  RL_pgm_reader_fsm_action_f_update_l67c10, RL_pgm_reader_fsm_action_l71c20,\n  RL_pgm_reader_fsm_action_f_update_l66c7, RL_pgm_reader_fsm_action_l74c7,\n  RL_pgm_reader_fsm_action_l75c7] ) fired in the same clock cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkTb

